
  **********************vector**********************   
     <<<动态数组>>>>
当向vector里添加元素时,如果不够内存,它会自动从新分配内存,把原有数据拷贝过去.
push_back(elem)   在末尾添加元素
capacity()        数组容量 

vector构造函数
vector<T>v   采用模板类实现,默认构造函数
vector<T>v1(v.begin(),v.end())  将v[begin(),end()]区间的元素拷贝给本身
vector(n,elem)     构造函数将n个elem拷贝给本身
vector(const vector & vec)    拷贝构造函数


vector赋值操作
assign(beg,end)   将beg,end区间的数据拷贝赋值给本身.
assign(n,elem)    将n个elem拷贝复制给本身.
vector&operator=(const vector &vec)    重载等号操作符
swap(vec)    将vec和本身元素互换

vector大小操作
size()    返回容器中元素的个数
empty()    判断容器是否为空
resize(int num)  重新指定容器的长度为num,若容器变长,则以默认值填充新位置,如果变短,则把末尾超出容器长度的元素删掉.  默认为0;
resize(int num,elem)  重载  以elem填充.
reserve(int len)   容器预留len个元素,预留位置不初始化,元素不可访问.   //预留空间.

巧用swap收缩空间

vector<int>(v).swap(v);  
vector<int>(v) 利用初始化v初始化匿名对象


vector存取操作

at(int dex) 返回索引dex所指的数据,如果idx越界,抛出out_of_range异常

operator[]  返回索引idx所指的数据,越界时直接崩溃
front()   返回容器第一个元素
back()   返回容器的最后一个元素

insert(const_iterator pos,int count,elem)  迭代器指向的位置pos插入count个元素elem.
push_back(elem)  尾部插入元素elem
pop_back()       删除最后一个元素.

erase(const-iterator start,cosnt_iterator end)删除迭代器start到end之间的元素
erase(cosnt_iterator  pos) 删除迭代器指向的元素
clear()    删除容器所有的元素

vector的迭代器为随机迭代器.功能最强大.


